{"id":496,"assetBundleId":-1,"data":[[],"Quyet\/Burn",null,["FOG_EXP","FOG_EXP2","FOG_LINEAR","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["RenderType","Opaque"]],["FOG_EXP","FOG_EXP2","FOG_LINEAR","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],1]],[[0,0,[],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _BaseTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _BaseTex_ST.xy + _BaseTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tfloat _ScaleTexture;\nuniform \tmediump vec4 _ColorMulti;\nuniform \tfloat _ScaleFadePlus;\nuniform lowp sampler2D _PlusTex;\nuniform lowp sampler2D _TexFadePlus;\nuniform lowp sampler2D _BaseTex;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nfloat u_xlat6;\nbool u_xlatb6;\nfloat u_xlat7;\nvoid main()\n{\n    u_xlat0.xy = vs_TEXCOORD0.xy * vec2(_ScaleTexture);\n    u_xlat10_1.xyz = texture2D(_TexFadePlus, u_xlat0.xy).xyz;\n    u_xlat10_0.xyz = texture2D(_PlusTex, u_xlat0.xy).xyz;\n    u_xlatb6 = _ScaleFadePlus>=u_xlat10_0.x;\n    u_xlat7 = (u_xlatb6) ? 0.0 : 1.0;\n    u_xlat6 = u_xlatb6 ? 1.0 : float(0.0);\n    u_xlat1.xyz = vec3(u_xlat7) * u_xlat10_1.xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * vec3(u_xlat6) + u_xlat1.xyz;\n    u_xlat10_1 = texture2D(_BaseTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 * _ColorMulti;\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    SV_Target0.w = u_xlat1.w;\n    return;\n}\n\n",0,0],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _BaseTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _BaseTex_ST.xy + _BaseTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tfloat _ScaleTexture;\nuniform \tmediump vec4 _ColorMulti;\nuniform \tfloat _ScaleFadePlus;\nUNITY_LOCATION(0) uniform mediump sampler2D _PlusTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _TexFadePlus;\nUNITY_LOCATION(2) uniform mediump sampler2D _BaseTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nfloat u_xlat6;\nbool u_xlatb6;\nfloat u_xlat7;\nvoid main()\n{\n    u_xlat0.xy = vs_TEXCOORD0.xy * vec2(_ScaleTexture);\n    u_xlat16_1.xyz = texture(_TexFadePlus, u_xlat0.xy).xyz;\n    u_xlat16_0.xyz = texture(_PlusTex, u_xlat0.xy).xyz;\n    u_xlatb6 = _ScaleFadePlus>=u_xlat16_0.x;\n    u_xlat7 = (u_xlatb6) ? 0.0 : 1.0;\n    u_xlat6 = u_xlatb6 ? 1.0 : float(0.0);\n    u_xlat1.xyz = vec3(u_xlat7) * u_xlat16_1.xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat6) + u_xlat1.xyz;\n    u_xlat16_1 = texture(_BaseTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 * _ColorMulti;\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    SV_Target0.w = u_xlat1.w;\n    return;\n}\n\n",1,0]],[],0]],[],[["_BaseTex",4,0,0,0,0,"white",0],["_PlusTex",4,0,0,0,0,"white",0],["_ScaleTexture",3,0.100000001490116,0,10,0,"",0],["_ColorMulti",0,1,1,1,1,"",0],["_TexFadePlus",4,0,0,0,0,"white",0],["_ScaleFadePlus",3,1,-0.100000001490116,1,0,"",0]],null,null,0,0,0]}